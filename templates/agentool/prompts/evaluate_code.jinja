## Tool Being Evaluated: {{ agentool_to_implement.name }}

### Implementation Code
```python
{{ implementation_code }}
```

### Original Specification
{{ spec_output | tojson(indent=2) }}

### Analysis Context  
{{ analysis_output | tojson(indent=2) }}

### Code Skeleton Template
```python
{{ skeleton }}
```

## Evaluation Task

Evaluate this AgenTool implementation for **{{ agentool_to_implement.name }}** against its specification.

### Key Requirements from Specification:
{% if spec_output.operations -%}
- **Operations Required**: {% for op in spec_output.operations %}{{ op.name }}{% if not loop.last %}, {% endif %}{% endfor %}
{%- endif %}
{% if spec_output.dependencies -%}
- **Dependencies**: {% for dep in spec_output.dependencies %}{{ dep }}{% if not loop.last %}, {% endif %}{% endfor %}
{%- endif %}
{% if spec_output.description -%}
- **Purpose**: {{ spec_output.description }}
{%- endif %}

### Focus Areas for This Tool:
{% if agentool_to_implement.description -%}
- **Core Function**: {{ agentool_to_implement.description }}
{%- endif %}
{% if agentool_to_implement.required_tools -%}
- **Integration Points**: {{ agentool_to_implement.required_tools | join(', ') }}
{%- endif %}

## Assessment Instructions

1. **Technical Validation**: Check syntax, imports, schema compliance, routing completeness, and function implementation
2. **Quality Scoring**: Rate correctness, completeness, integration, and overall quality on 0.0-1.0 scale
3. **Issue Identification**: List specific problems (missing features, incorrect implementations, etc.)
4. **Improvement Suggestions**: Recommend enhancements (not fixes - just conceptual improvements)
5. **Deployment Assessment**: Determine if ready for production use

Remember: 
- **EVALUATE ONLY** - do not provide fixed code
- Focus on functionality and production readiness
- Be specific about issues found
- Justify your scoring decisions

Provide your comprehensive evaluation now: